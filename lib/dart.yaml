
linter:
  # https://dart.dev/tools/linter-rules
  rules:
    - always_declare_return_types
    - always_use_package_imports
    - annotate_overrides
    - avoid_annotating_with_dynamic
    - avoid_bool_literals_in_conditional_expressions
    - avoid_catching_errors
    - avoid_double_and_int_checks
    - avoid_dynamic_calls
    - avoid_empty_else
    - avoid_equals_and_hash_code_on_mutable_classes
    - avoid_escaping_inner_quotes
    - avoid_field_initializers_in_const_classes
    - avoid_final_parameters
    - avoid_function_literals_in_foreach_calls
    - avoid_implementing_value_types
    - avoid_init_to_null
    - avoid_multiple_declarations_per_line
    - avoid_null_checks_in_equality_operators
    - avoid_positional_boolean_parameters
    - avoid_print
    - avoid_private_typedef_functions
    - avoid_redundant_argument_values
    - avoid_relative_lib_imports
    - avoid_renaming_method_parameters
    - avoid_return_types_on_setters
    - avoid_returning_null_for_void
    - avoid_returning_this
    - avoid_setters_without_getters
    - avoid_shadowing_type_parameters
    - avoid_single_cascade_in_expression_statements
    - avoid_slow_async_io
    - avoid_type_to_string
    - avoid_types_as_parameter_names
    - avoid_unused_constructor_parameters
    - avoid_void_async
    - await_only_futures
    - camel_case_extensions
    - camel_case_types
    - cancel_subscriptions
    - cast_nullable_to_non_nullable
    - close_sinks
    - collection_methods_unrelated_type
    - combinators_ordering
    - comment_references
    - conditional_uri_does_not_exist
    - constant_identifier_names
    - control_flow_in_finally
    - curly_braces_in_flow_control_structures
    - dangling_library_doc_comments
    - depend_on_referenced_packages
    - deprecated_consistency
    - deprecated_member_use_from_same_package
    - directives_ordering
    - discarded_futures
    - empty_catches
    - empty_constructor_bodies
    - empty_statements
    - eol_at_end_of_file
    - exhaustive_cases
    - file_names
    - hash_and_equals
    - implementation_imports
    - implicit_call_tearoffs
    - join_return_with_assignment
    - leading_newlines_in_multiline_strings
    - library_annotations
    - library_names
    - library_prefixes
    - library_private_types_in_public_api
    - literal_only_boolean_expressions
    - matching_super_parameters
    - missing_whitespace_between_adjacent_strings
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - no_leading_underscores_for_library_prefixes
    - no_leading_underscores_for_local_identifiers
    - no_literal_bool_comparisons
    - no_logic_in_create_state
    - no_runtimeType_toString
    - no_self_assignments
    - no_wildcard_variable_uses
    - non_constant_identifier_names
    - noop_primitive_operations
    - null_check_on_nullable_type_parameter
    - null_closures
    - omit_local_variable_types
    - only_throw_errors
    - overridden_fields
    - package_api_docs
    - package_names
    - package_prefixed_library_names
    - parameter_assignments
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_constructors_over_static_methods
    - prefer_contains
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_for_elements_to_map_fromIterable
    - prefer_foreach
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_if_elements_to_conditional_expressions
    - prefer_if_null_operators
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_interpolation_to_compose_strings
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_is_not_operator
    - prefer_iterable_whereType
    - prefer_mixin
    - prefer_null_aware_method_calls
    - prefer_null_aware_operators
    - prefer_single_quotes
    - prefer_spread_collections
    - prefer_typing_uninitialized_variables
    - prefer_void_to_null
    - provide_deprecation_message
    - recursive_getters
    - secure_pubspec_urls
    - slash_for_doc_comments
    - sort_unnamed_constructors_first
    - test_types_in_equals
    - throw_in_finally
    - tighten_type_of_initializing_formals
    - type_annotate_public_apis
    - type_init_formals
    - type_literal_in_constant_pattern
    - unawaited_futures
    - unnecessary_brace_in_string_interps
    - unnecessary_breaks
    - unnecessary_const
    - unnecessary_constructor_name
    - unnecessary_getters_setters
    - unnecessary_lambdas
    - unnecessary_late
    - unnecessary_library_directive
    - unnecessary_new
    - unnecessary_null_aware_assignments
    - unnecessary_null_aware_operator_on_extension_on_nullable
    - unnecessary_null_in_if_null_operators
    - unnecessary_nullable_for_final_variable_declarations
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unnecessary_statements
    - unnecessary_string_escapes
    - unnecessary_string_interpolations
    - unnecessary_this
    - unnecessary_to_list_in_spreads
    - unreachable_from_main
    - unrelated_type_equality_checks
    - unsafe_html
    - use_enums
    - use_full_hex_values_for_flutter_colors
    - use_function_type_syntax_for_parameters
    - use_if_null_to_convert_nulls_to_bools
    - use_is_even_rather_than_modulo
    - use_named_constants
    - use_raw_strings
    - use_rethrow_when_possible
    - use_setters_to_change_properties
    - use_string_buffers
    - use_string_in_part_of_directives
    - use_test_throws_matchers
    - use_to_and_as_if_applicable
    - valid_regexps
    - void_checks

# https://dart.dev/tools/diagnostic-messages
analyzer:
  errors:
    always_declare_return_types: error
    always_use_package_imports: warning
    annotate_overrides: warning
    avoid_annotating_with_dynamic: warning
    avoid_bool_literals_in_conditional_expressions: warning
    avoid_catching_errors: warning
    avoid_double_and_int_checks: warning
    avoid_dynamic_calls: warning
    avoid_empty_else: warning
    avoid_equals_and_hash_code_on_mutable_classes: warning
    avoid_escaping_inner_quotes: warning
    avoid_field_initializers_in_const_classes: warning
    avoid_final_parameters: warning
    avoid_function_literals_in_foreach_calls: warning
    avoid_implementing_value_types: warning
    avoid_init_to_null: warning
    avoid_multiple_declarations_per_line: warning
    avoid_null_checks_in_equality_operators: warning
    avoid_positional_boolean_parameters: warning
    avoid_print: warning
    avoid_private_typedef_functions: warning
    avoid_redundant_argument_values: warning
    avoid_relative_lib_imports: warning
    avoid_renaming_method_parameters: warning
    avoid_return_types_on_setters: warning
    avoid_returning_null_for_void: warning
    avoid_returning_this: warning
    avoid_setters_without_getters: warning
    avoid_shadowing_type_parameters: warning
    avoid_single_cascade_in_expression_statements: warning
    avoid_slow_async_io: warning
    avoid_type_to_string: warning
    avoid_types_as_parameter_names: warning
    avoid_unused_constructor_parameters: warning
    avoid_void_async: warning
    await_only_futures: warning
    camel_case_extensions: warning
    camel_case_types: warning
    cancel_subscriptions: warning
    cast_nullable_to_non_nullable: warning
    close_sinks: warning
    collection_methods_unrelated_type: error
    combinators_ordering: warning
    comment_references: warning
    conditional_uri_does_not_exist: warning
    constant_identifier_names: warning
    control_flow_in_finally: warning
    curly_braces_in_flow_control_structures: warning
    dangling_library_doc_comments: warning
    depend_on_referenced_packages: warning
    deprecated_consistency: warning
    deprecated_member_use_from_same_package: warning
    directives_ordering: warning
    discarded_futures: warning
    empty_catches: warning
    empty_constructor_bodies: warning
    empty_statements: warning
    eol_at_end_of_file: warning
    exhaustive_cases: warning
    file_names: warning
    hash_and_equals: warning
    implementation_imports: warning
    implicit_call_tearoffs: warning
    join_return_with_assignment: warning
    leading_newlines_in_multiline_strings: warning
    library_annotations: warning
    library_names: warning
    library_prefixes: warning
    library_private_types_in_public_api: warning
    literal_only_boolean_expressions: warning
    matching_super_parameters: warning
    missing_whitespace_between_adjacent_strings: warning
    no_adjacent_strings_in_list: warning
    no_duplicate_case_values: warning
    no_leading_underscores_for_library_prefixes: warning
    no_leading_underscores_for_local_identifiers: warning
    no_literal_bool_comparisons: warning
    no_logic_in_create_state: warning
    no_runtimeType_toString: warning
    no_self_assignments: warning
    no_wildcard_variable_uses: warning
    non_constant_identifier_names: warning
    noop_primitive_operations: warning
    null_check_on_nullable_type_parameter: warning
    null_closures: warning
    omit_local_variable_types: warning
    only_throw_errors: warning
    overridden_fields: warning
    package_api_docs: warning
    package_names: warning
    package_prefixed_library_names: warning
    parameter_assignments: warning
    prefer_adjacent_string_concatenation: warning
    prefer_asserts_in_initializer_lists: warning
    prefer_collection_literals: warning
    prefer_conditional_assignment: warning
    prefer_const_constructors: warning
    prefer_const_constructors_in_immutables: warning
    prefer_const_declarations: warning
    prefer_const_literals_to_create_immutables: warning
    prefer_constructors_over_static_methods: warning
    prefer_contains: warning
    prefer_final_fields: warning
    prefer_final_in_for_each: warning
    prefer_final_locals: warning
    prefer_for_elements_to_map_fromIterable: warning
    prefer_foreach: warning
    prefer_function_declarations_over_variables: warning
    prefer_generic_function_type_aliases: warning
    prefer_if_elements_to_conditional_expressions: warning
    prefer_if_null_operators: warning
    prefer_initializing_formals: warning
    prefer_inlined_adds: warning
    prefer_interpolation_to_compose_strings: warning
    prefer_is_empty: warning
    prefer_is_not_empty: warning
    prefer_is_not_operator: warning
    prefer_iterable_whereType: warning
    prefer_mixin: warning
    prefer_null_aware_method_calls: warning
    prefer_null_aware_operators: warning
    prefer_single_quotes: warning
    prefer_spread_collections: warning
    prefer_typing_uninitialized_variables: warning
    prefer_void_to_null: warning
    provide_deprecation_message: warning
    recursive_getters: warning
    secure_pubspec_urls: warning
    slash_for_doc_comments: warning
    sort_unnamed_constructors_first: warning
    test_types_in_equals: warning
    throw_in_finally: warning
    tighten_type_of_initializing_formals: warning
    type_annotate_public_apis: warning
    type_init_formals: warning
    type_literal_in_constant_pattern: warning
    unawaited_futures: warning
    unnecessary_brace_in_string_interps: warning
    unnecessary_breaks: warning
    unnecessary_const: warning
    unnecessary_constructor_name: warning
    unnecessary_getters_setters: warning
    unnecessary_lambdas: warning
    unnecessary_late: warning
    unnecessary_library_directive: warning
    unnecessary_new: warning
    unnecessary_null_aware_assignments: warning
    unnecessary_null_aware_operator_on_extension_on_nullable: warning
    unnecessary_null_in_if_null_operators: warning
    unnecessary_nullable_for_final_variable_declarations: warning
    unnecessary_overrides: warning
    unnecessary_parenthesis: warning
    unnecessary_raw_strings: warning
    unnecessary_statements: warning
    unnecessary_string_escapes: warning
    unnecessary_string_interpolations: warning
    unnecessary_this: warning
    unnecessary_to_list_in_spreads: warning
    unreachable_from_main: warning
    unrelated_type_equality_checks: warning
    unsafe_html: warning
    use_enums: warning
    use_full_hex_values_for_flutter_colors: warning
    use_function_type_syntax_for_parameters: warning
    use_if_null_to_convert_nulls_to_bools: warning
    use_is_even_rather_than_modulo: warning
    use_named_constants: warning
    use_raw_strings: warning
    use_rethrow_when_possible: warning
    use_setters_to_change_properties: warning
    use_string_buffers: warning
    use_string_in_part_of_directives: warning
    use_test_throws_matchers: warning
    use_to_and_as_if_applicable: warning
    valid_regexps: warning
    void_checks: warning

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
